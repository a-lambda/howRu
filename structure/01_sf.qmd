---
title: Entrée en matière 
---

## Un exemple pour illustrer

Nous allons nous intéresser au jeu de données `world` présent dans le package `spData`

```{r}
#| label: load-package
#| echo: false
#| warning: false
library(sf)
library(spData)
```

```{r}
#| label: world-class
#| class-output: output
class(world)
dim(world)
names(world)
```

Il s'agit bien d'un objet de type dataframe composé de 177 pays et 11 colonnes.
Mais c'est aussi un objet de classe `sf`^[simple feature] <br>

Sélectionnons un sous-ensemble de `world` que nous appellerons `world_mini`

```{r}
#| label: world-mini
#| class-output: output

world_mini <- world[1:2, 1:3]
world_mini
```

Comparé à un dataframe standard, un objet de type `sf` inclut des méta-données géographiques additionnelles :

- `Geometry type`
- `Dimension`
- `Bounding box`
- `Geodetic CRS`, information lié au sytème de coordonnées de référence

ainsi que la présence d'une colonne `geom` (nommé parfois aussi `geometry`) comportant des éléments géométriques.

Cette colonne particulière est une colonne de classe `sfc`^[simple feature column]. <br>

A leurs tours les objets de type `sfc` sont composés d'un ou plusieurs objets de type `sfg`^[simple feature geometry].


## Une introduction aux "simple features"

Les "simple features" (que l'on pourrait traduire par "fonctionnalités de base") font partie d'une [norme ouverte](http://portal.opengeospatial.org/files/?artifact_id=25355) homologuée par l'Open Geospatial Consortium ([OGC](https://www.ogc.org/)). <br>

C'est un modèle hiérarchique de données qui regroupe 18 types géométriques. Seulement 7 sont utilisés dans la grande majorité des recherches géographiques ; ces types géométriques de base sont intégralement implémentés par le package [sf](https://r-spatial.github.io/sf/) de R.

Il est possible de retrouver l'ensemble des 18 types géométriques dans le [manuel PostGIS](http://postgis.net/docs/using_postgis_dbmanagement.html).

Le paquet `sf` fournit les classes des vecteurs géographiques et une interface en ligne de commande permettant l'accès aux fonctionnalités de géo-computation offertes par les librairies de bas-niveau suivantes :

- [GDAL](https://gdal.org/)\index{GDAL}, pour lire, écrire et manipuler un nombre important de formats de données géographiques,

- [PROJ](https://proj.org/), une puissante librairie pour la transformations de systèmes de coordonnées, 

- [GEOS](https://libgeos.org/)\index{GEOS}, un moteur de géométrie planaire destinés aux calculs de tampons (buffers) par exemple, aussi bien que des centroïdes pour des données projetées suivant un CRS (Coordinate Reference Systems) donné,

- [S2](https://s2geometry.io/), un moteur de géométrie sphérique écrit en C++ et développé par Google, via le package [s2](https://r-spatial.github.io/s2/).


```{r}
#| label: load-sf
#| class-output: output
library(sf)
```

Le message visible au chargement du package `sf` décline explicitement les liens avec ces librairies et montre aussi l'activation par défaut des fonctionnalités du paquet s2.

Les fonctionnalités offertes par le package `sf` sont correctement documentées au travers de 7 vignettes visibles hors connexion comme suit :

```{r}
#| label: sf-vignettes
#| message: false
#| eval: false
vignette(package = "sf") # pour voir quels vignettes sont disponibles
vignette("sf1") # une introduction au package
vignette("sf2") # lire, écrire, et convertir les "simple features"
vignette("sf3") # manipuler les géométries des "simple features"
vignette("sf4") # manipuler le "simple features"
vignette("sf5") # afficher les "simple features"
vignette("sf6") # points divers de la documentation
vignette("sf7") # opérations de géométrie sphérique
```

```{r}
#| label: sf-dependencies
#| message: false
#| include: false
#tools::package_dependencies("sf", recursive = TRUE)
```

## Les types géométriques




```{r}
#| label: asia
world_asia <- world[world$continent == "Asia", ]
asia <- st_union(world_asia)
bbox <- st_bbox(world)

asia

world

```

```{r}
#| label: asia-world_plot
#| fig-cap: "L' Asie dans le Monde. La zone asiatique colorée en rouge a été affichée avec les limites de cadre (bounding box) de la carte du Monde. L'ensemble des pays du Monde avec leurs frontières respectives ont été ensuite affichés au-dessus de la zone déjà tracée."
#| cap-location: margin
#| fig-width: 10
#| fig-height: 6
#| fig-format: svg
#| layout-align: center

plot(
  asia, 
  xlim = c(bbox["xmin"], bbox["xmax"]), 
  ylim = c(bbox["ymin"],bbox["ymax"]),
  col = "red",
  graticule = TRUE,
  axes = TRUE,
  main = "Les pays d'Asie"
)

plot(
  st_geometry(world), 
  add = TRUE
)

```



::: {.callout-note}

Les mots sont ici malaisés à formuler pour des éléments graphiques simples (bounding box) c'est ce qui fait ici la difficulté de la transmission correcte des informations pour une personne novice dans le domaine.

:::
